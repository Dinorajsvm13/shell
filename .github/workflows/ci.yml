name: CI Build and Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full Git history is fetched

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Install Firebase Tools
      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      # Step 5: Build Affected Projects
      - name: Build Affected Projects
        run: |
          npx nx print-affected --target=build --base=HEAD~1 --select=projects > affected-projects.txt
          cat affected-projects.txt
          while read -r project; do
            case $project in
              "shell")
                npx nx build $project --base-href=/
                ;;
              "app1")
                npx nx build $project --base-href=/app1/
                ;;
              "app2")
                npx nx build $project --base-href=/app2/
                ;;
              "app3")
                npx nx build $project --base-href=/app3/
                ;;
              "app4")
                npx nx build $project --base-href=/app4/
                ;;
            esac
          done < affected-projects.txt

      # Step 6: Archive Build Artifacts (Optional)
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      # Step 7: Authenticate Firebase CLI
      - name: Authenticate with Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT > firebase-key.json
          npx firebase-tools login:ci --token "$(cat firebase-key.json)"

      # Step 7: Deploy Affected Projects to Firebase Hosting
      - name: Deploy Affected Projects to Firebase Hosting
        run: |
          while read -r project; do
            if [ -d "dist/apps/$project" ]; then
              echo "Deploying $project..."
              echo '{
                "hosting": {
                  "public": "dist/apps/'"$project"'",
                  "rewrites": [{"source": "**", "destination": "/index.html"}]
                }
              }' > firebase.json
              cat firebase.json  # Debug the generated firebase.json
              npx firebase deploy --only hosting:$project --token "$(cat firebase-key.json)"
            else
              echo "Skipping $project as no build output found in dist/apps/$project"
            fi
          done < affected-projects.txt